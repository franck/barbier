- name: update apt cache
  apt: update_cache=yes cache_valid_time=3600

- name: upgrade the distro
  apt: upgrade=yes
  sudo: yes

- name: install packages
  apt: pkg={{ item }} state=latest
  sudo: yes
  with_items:
    - build-essential
    - git
    - git-core
    - curl
    - wget
    - tree
    - vim
    - fail2ban

- name: create deploy user
  user: name={{ deploy_user }} password={{ deploy_user_password }} shell=/bin/bash
  tags: app

- name: add local sshkey to deploy_user  
  authorized_key: user={{ deploy_user }} key="{{ lookup('file', '~/.ssh/id_rsa.pub') }}"
  tags: app

- name: Remove sudo group rights
  lineinfile: dest=/etc/sudoers regexp="^%sudo" state=absent

- name: add app user to sudoers
  lineinfile: dest=/etc/sudoers state=present line="{{ deploy_user }} ALL=(ALL) ALL"
  tags: app

- name: Disallow root SSH access
  action: lineinfile dest=/etc/ssh/sshd_config regexp="^PermitRootLogin" line="PermitRootLogin no" state=present
  notify: Restart sshd

- name: Disallow password authentication
  action: lineinfile dest=/etc/ssh/sshd_config regexp="^PasswordAuthentication" line="PasswordAuthentication no" state=present
  notify: Restart sshd

- name: Install unattended-upgrades
  apt: pkg=unattended-upgrades state=present
  
- name: Adjust APT update intervals
  copy: src=apt_periodic dest=/etc/apt/apt.conf.d/10periodic

- name: Make sure unattended-upgrades only installs from {{ ansible_distribution_release }}-security
  lineinfile: dest=/etc/apt/apt.conf.d/50unattended-upgrades regexp="{{ ansible_distribution_release }}-updates" state=absent

- name: Copy debconf selections so that Postfix can configure itself non-interactively
  template: src=postfix_selections.j2  dest=/tmp/postfix_selections

- name: Set up Postfix to relay mail
  command: debconf-set-selections /tmp/postfix_selections

- name: Install logwatch
  apt: pkg=logwatch state=installed

- name: Make logwatch mail logwatch_notify_email daily
  lineinfile: dest=/etc/cron.daily/00logwatch regexp="^/usr/sbin/logwatch" line="/usr/sbin/logwatch --output mail --mailto {{ logwatch_notify_email }} --detail high" state=present create=yes

