- name: install requesite packages
  apt: name={{ item }} state=present
  with_items:
    - nodejs
    - imagemagick
  tags: app

- name: install rails
  gem: state=present user_install=no name={{ item }}
  with_items:
    - rails
    - bundler
  tags: app

- name: setup DB
  mysql_db: name={{ app_db_name }} state=present
  tags: app

- name: Create shared config directory for database.yml
  file: path={{ app_shared_path }}/config state=directory mode=0711 owner={{ deploy_user }} group={{ deploy_user }}
  tags: app

- name: Set app directory and subfolders permissions
  file: path={{ app_root }} state=directory mode=0755 owner={{ deploy_user }} group={{ deploy_user }} recurse=yes
  tags: app

- name: Copy database.yml in shared directory
  copy: src={{ playbook_dir }}/../../config/database.yml dest={{ app_shared_path }}/config/database.yml mode=0600 owner={{ deploy_user }} group={{ deploy_user }}
  tags: app

#- name: Checkout from repo
#  sudo_user: "{{ deploy_user }}"
#  git: >
#    repo={{ app_repo }}
#    dest=/home/{{ deploy_user }}/tmp
#    accept_hostkey=yes
#    key_file="/home/{{ deploy_user }}/.ssh/priv_key"
#  tags:
#    - app
#
#- name: Bundle
#  shell: >
#    chdir={{ app_root }}
#    bundle install --without test
#  tags:
#    - app
#
#- name: Run migrations
#  shell: >
#    chdir={{ app_root }}
#    rake db:migrate RAILS_ENV={{ rails_env }}
#  tags:
#    - app
#
#- name: Assets precompile
#  shell: >
#    chdir={{ app_root }}
#    rake assets:precompile RAILS_ENV={{ rails_env }}
#  tags:
#    - app
#
##- name: Start application (passenger)
#- name: restart application (passenger)
#  shell: >
#    chdir={{ app_root }}
#    touch tmp/restart.txt
#  tags:
#    - app

- name: Create the configurations for sites
  template: >
    src=site.conf.j2 
    dest=/etc/nginx/sites-available/{{ app_name }}.conf
  notify:
   - reload nginx
  tags: app

- name: Create links for sites-enabled
  file: >
    state=link 
    src=/etc/nginx/sites-available/{{ app_name }}.conf 
    dest=/etc/nginx/sites-enabled/{{ app_name }}.conf
  notify:
   - reload nginx
  tags: app
